name: linter
kind: pipeline
type: kubernetes
pull: if-not-exists
load: none

steps:
- name: yapf-run
  image: python:latest
  volumes:
    - name: yapf-cache
      path: /drone/src/
  commands:
    - git checkout -b $DRONE_SOURCE_BRANCH
    - pip install -qq yapf
    - yapf -r -i recaptcha_token/ setup.py
  when:
    event:
      - pull_request
    branch:
      - master
      - dev

- name: yapf-check
  image: python:latest
  depends_on:
    - yapf-run
  volumes:
    - name: yapf-cache
      path: /drone/src/
  commands:
    - git status
    - |
      if [ $(git status --porcelain | wc -l) -eq "0" ]; then 
        echo "No changes detected. Ok"; 
      else 
        echo "Changes detected. Refactor your code and run again"
        exit 1; 
      fi
  when:
    event:
      - pull_request
    branch:
      - master
      - dev

- name: yapf-push
  image: python:latest
  depends_on:
    - yapf-run
  volumes:
    - name: yapf-cache
      path: /drone/src/
  commands:
    - git status
    - |
      if [ $(git status --porcelain | wc -l) != "0" ]; then 
        git commit -am "refactor: yapf autofixes"
        git push --set-upstream origin $DRONE_SOURCE_BRANCH
      else
        echo "Nothing to commit. Ok"
      fi
  when:
    event:
      - pull_request
    branch:
      - master
      - dev

- name: build-package
  image: python:latest
  commands:
    - LAST_COMMIT=`git show-branch --no-name HEAD`
    - | 
      if echo "$LAST_COMMIT" | grep -q "Bump version:"; then 
        echo "Last commit with build. Skip"; 
        exit 0; 
      else 
        echo "New build"; 
      fi
    - pip install bumpversion build twine
    - VERSION_PREFIX=`if echo ${DRONE_BRANCH} | grep -q 'dev'; then echo 'dev_'; else echo ''; fi`
    - VERSION_NUMBER=`if echo ${DRONE_BRANCH} | grep -q 'dev'; then echo 'minor'; else echo 'major'; fi`
    - bumpversion `echo $VERSION_NUMBER --tag-name $VERSION_PREFIX_v{new_version}`
    - python3 -m build
    - python3 -m twine upload --repository $DRONE_REPO_NAME `find ./dist/ -path "**.tar.gz"` --config-file ./.pypirc
    - git push --set-upstream origin $DRONE_BRANCH
  when:
    event:
      - push
    branch:
      - master
      - dev

volumes:
- name: yapf-cache
  temp: {}

trigger:
  event:
    - pull_request
    - push
  branch:
    - master
    - dev