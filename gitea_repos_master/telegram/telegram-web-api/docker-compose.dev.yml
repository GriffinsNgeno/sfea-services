version: '3.8'

services:
  telegram-api:
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - /app/__pycache__
    working_dir: /app
    env_file:
      - .env.dev
    environment:
      - MODE=development
      - DEBUG=true
      - PORT=8000
      - MONGO_URL=mongodb://mongo:27017
      - MONGO_DB=telegram_api
      - MONGO_COLLECTION=sessions
      - KEYDB_URL=redis://redis:6379
      - KEYDB_QUEUE=telegram_search
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=telegram_api
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  mongo_data:
  redis_data:
