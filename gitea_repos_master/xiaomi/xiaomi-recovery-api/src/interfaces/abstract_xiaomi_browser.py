from abc import abstractmethod

from src.interfaces.abstract_browser import AbstractBrowser
from src.logic.repository.screens import Screen
from src.logic.repository.screens_repository import ScreensRepository


class AbstractXiaomiBrowser(AbstractBrowser):
    @abstractmethod
    def waiting_screen(self, screen_title: str, screen: Screen) -> str | None:
        """Ожидает появления экрана. Применяется для ожидания загрузки главного экрана и изображения с капчей.
        Верстка главного экрана и верстка формы с капчей выбирается сайтом xiaomi случайно.
        Для отслеживания загрузки экрана или появления формы с изображением, данный метод за отведенное время
        ConfigApp.SCREEN_WAITING десять раз проходит по всем известным версткам и при обнаружении совпадения
        завершает свою работу. При завершении работы возвращает условное имя верстки, которое было обнаружено или None.

        :param screen_title: Название ожидаемого экрана для отображения в логах.
        :param screen: Экземпляр класса Screen, который содержит определения всех известных форм с капчей.
        :return: Найденное условное имя верстки илм None.
        """
        pass

    @abstractmethod
    def waiting_search_result(self, screen_repository: ScreensRepository) -> str | None:
        """Ожидает загрузки результата поиска. Результат поиска может отображаться как на одной из форм с капчей,
        так и на новом экране. Для отслеживания результата данный метод за отведенное время
        ConfigApp.SEARCH_RESULT_WAITING десять раз проходит по всем известным результатам и при обнаружении совпадения
        завершает свою работу, вернув имя экрана с результатом поиска (ошибка решения капчи, пользователь найден,
        пользователь не найден, ...). Или None, если за отведенное время не нашлось совпадений.

        :param screen_repository: Экземпляр класса ScreensRepository, который содержит возможные результаты поиска.
        :return: Имя экрана с результатом поиска или None.
        """
        pass

    @abstractmethod
    def switch_to_email(self, screen_repository: ScreensRepository) -> bool:
        """Переключает форму поиска на поиск по e-mail. Поле с переключателем реализовано через тэг input,
        при клике на котором всплывает окно с выбором поиска "Номер телефона", "E-mail" и
        "Идентификатор аккаунта Xiaomi", при наведении курсора мыши на одно из них, меняется верстка (отрабатывает
        JavaScript код) после подтверждения выбора, всплывающее окно закрывается (отрабатывает JavaScript код).
        Стандартными средствами selenium find_element(by, selector).send_keys(data) не удается изменить значение поля.
        Данный метод отправляет данные в поле, что провоцирует открытие всплывающего окна с выбором,
        отправляет нажатие клавиш стрелка вниз и Enter, что позволяет переключиться на поиск по E-mail.
        Проверяет, что переключение произошло успешно и возвращает True иначе False.

        :param screen_repository: Экземпляр класса ScreensRepository, который содержит все известные экраны.
        :return: Переключение выполнено успешно (True) или нет (False).
        """
        pass

    @abstractmethod
    def switch_phone_country(
        self, screen_repository: ScreensRepository, country_code: str
    ) -> bool:
        """Переключает в форме поиска код страны.
        Код страны оформлен отдельным полем, при клике на него появляется дополнительная верстка,
        которая содержит список стран и их коды. Перемещение стрелками клавиатуры не работает, табуляция
        не работает. Данный метод эмулирует клик мыши для отображения списка стран, ожидает пока отработает
        JavaScript и список отобразится (список может быть в двух вариантах верстки, код это учитывает),
        перебирает все строки в поисках нужной страны, затем эмулирует клик мыши на ней,
        что приводит к выбору нужного кода страны.

        :param screen_repository: Экземпляр класса ScreensRepository, который содержит все известные экраны.
        :param country_code: Код страны, которую проверяем.
        :return: Булевый результат, успех или нет.
        """
        pass
