package regions

import (
	"fmt"
	"sync/atomic"

	"github.com/jackc/pgx/v5"
	"github.com/jackc/pgx/v5/pgxpool"
	"github.com/urfave/cli/v2"
)

type Regions struct{}

func NewRegions() *Regions {
	return &Regions{}
}

func (t *Regions) Describe() *cli.Command {
	return &cli.Command{
		Category: "regions",
		Name:     "regions",
		Action:   t.Execute,
		Usage:    "Внутренний справочник списка регионов",
		Hidden:   true,
		Flags: cli.FlagsByName{
			&cli.StringFlag{Name: "database", Required: true, EnvVars: []string{"ISPHERE_GRABBER_DATABASE"}},
			&cli.StringFlag{Name: "schema", Value: "regions"},
			&cli.StringFlag{Name: "table", Value: "regions"},
		},
	}
}

func (t *Regions) Execute(c *cli.Context) error {
	var (
		ctx = c.Context

		databaseStr = c.String("database")
		schema      = c.String("schema")
		table       = c.String("table")
	)

	pool, err := pgxpool.New(ctx, databaseStr)
	if err != nil {
		return fmt.Errorf("failed to create pgxpool: %w", err)
	}

	defer pool.Close()

	conn, err := pool.Acquire(ctx)
	if err != nil {
		return fmt.Errorf("failed to acquire database connection: %w", err)
	}

	defer conn.Release()

	tx, err := conn.Begin(ctx)
	if err != nil {
		return fmt.Errorf("failed to open database transaction: %w", err)
	}

	//goland:noinspection GoUnhandledErrorResult
	defer tx.Rollback(ctx) //nolint:errcheck

	if _, err = tx.Exec(ctx, fmt.Sprintf("truncate table %s.%s", schema, table)); err != nil {
		return fmt.Errorf("failed to execute truncate table: %w", err)
	}

	var (
		rows  [][]any
		idSeq atomic.Uint64
	)

	for code, names := range regions {
		id := idSeq.Add(1)

		rows = append(rows, []any{
			id,
			code,
			names,
		})
	}

	columns := []string{"id", "code", "names"}

	if _, err = tx.CopyFrom(ctx, pgx.Identifier{schema, table}, columns, pgx.CopyFromRows(rows)); err != nil {
		return fmt.Errorf("failed to copy from rows: %w", err)
	}

	if err = tx.Commit(ctx); err != nil {
		return fmt.Errorf("failed to commit: %w", err)
	}

	return nil
}

var regions = map[string][]string{
	"01": {"Республика Адыгея (Адыгея)"},
	"02": {"Республика Башкортостан"},
	"03": {"Республика Бурятия"},
	"04": {"Республика Алтай"},
	"05": {"Республика Дагестан"},
	"06": {"Республика Ингушетия"},
	"07": {"Кабардино - Балкарская Республика Кабардино-Балкарская Республика"},
	"08": {"Республика Калмыкия"},
	"09": {"Карачаево - Черкесская Республика Карачаево-Черкесская Республика"},
	"10": {"Республика Карелия"},
	"11": {"Республика Коми"},
	"12": {"Республика Марий Эл"},
	"13": {"Республика Мордовия"},
	"14": {"Республика Саха (Якутия)", "Республика Саха /Якутия/"},
	"15": {"Республика Северная Осетия - Алания"},
	"16": {"Республика Татарстан (Татарстан)"},
	"17": {"Республика Тыва"},
	"18": {"Республика Удмуртская", "Удмуртская Республика"},
	"19": {"Республика Хакасия"},
	"20": {"Чеченская Республика", "Республика Чеченская"},
	"21": {"Чувашская Республика"},
	"22": {"Алтайский край"},
	"23": {"Краснодарский край"},
	"24": {"Красноярский край"},
	"25": {"Приморский край"},
	"26": {"Ставропольский край"},
	"27": {"Хабаровский край"},
	"28": {"Амурская область"},
	"29": {"Архангельская область"},
	"30": {"Астраханская область"},
	"31": {"Белгородская область"},
	"32": {"Брянская область"},
	"33": {"Владимирская область"},
	"34": {"Волгоградская область"},
	"35": {"Вологодская область"},
	"36": {"Воронежская область"},
	"37": {"Ивановская область"},
	"38": {"Иркутская область"},
	"39": {"Калининградская область"},
	"40": {"Калужская область"},
	"41": {"Камчатская область", "Камчатский край"},
	"42": {"Кемеровская область"},
	"43": {"Кировская область"},
	"44": {"Костромская область"},
	"45": {"Курганская область"},
	"46": {"Курская область"},
	"47": {"Ленинградская область"},
	"48": {"Липецкая область"},
	"49": {"Магаданская область"},
	"50": {"Московская область"},
	"51": {"Мурманская область"},
	"52": {"Нижегородская область"},
	"53": {"Новгородская область"},
	"54": {"Новосибирская область"},
	"55": {"Омская область"},
	"56": {"Оренбургская область"},
	"57": {"Орловская область"},
	"58": {"Пензенская область"},
	"59": {"Пермский край"},
	"60": {"Псковская область"},
	"61": {"Ростовская область"},
	"62": {"Рязанская область"},
	"63": {"Самарская область"},
	"64": {"Саратовская область"},
	"65": {"Сахалинская область"},
	"66": {"Свердловская область"},
	"67": {"Смоленская область"},
	"68": {"Тамбовская область"},
	"69": {"Тверская область"},
	"70": {"Томская область"},
	"71": {"Тульская область"},
	"72": {"Тюменская область"},
	"73": {"Ульяновская область"},
	"74": {"Челябинская область"},
	"75": {"Читинская область Забайкальский край"},
	"76": {"Ярославская область"},
	"77": {"Москва"},
	"78": {"Санкт - Петербург", "г. Санкт-Петербург"},
	"79": {"Еврейская автономная область"},
	"80": {"Агинский Бурятский автономный округ"},
	"81": {"Коми-Пермяцкий автономный округ"},
	"82": {"Корякский автономный округ"},
	"83": {"Ненецкий автономный округ"},
	"84": {"Таймырский (Долгано-Ненецкий) автономный округ"},
	"85": {"Усть-Ордынский Бурятский автономный округ"},
	"86": {"Ханты-Мансийский автономный округ (Югра)", "Ханты-Мансийский Автономный округ - Югра АО", "Ханты - Мансийский - Югра АО"},
	"87": {"Чукотский автономный округ", "Чукотский АО"},
	"88": {"Эвенкийский автономный округ"},
	"89": {"Ямало-Ненецкий автономный округ", "Ямало-Ненецкий АО"},
	"99": {"Иные территории, Байконур"},
	"91": {"Республика Крым"},
	"92": {"Севастополь"},
}
