apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-http-serve
  labels:
    {{- include "chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: web
spec:
  replicas: {{ .Values.http_serve.replicaCount }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}-http-serve
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: web
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}-http-serve
        app.kubernetes.io/instance: {{ .Release.Name }}
        date: "{{ now | unixEpoch }}"
        app.kubernetes.io/component: web
    spec:
      containers:
        - name: app
          image: "{{ .Values.http_serve.image.repository }}:{{ .Values.http_serve.image.tag }}"
          imagePullPolicy: {{ .Values.http_serve.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.http_serve.service.port }}
          command: [ 'bin/console', 'http:serve', '--port', '80' ]
          envFrom:
            - configMapRef:
                name: {{ include "chart.name" . }}-configmap-http-serve
          resources:
            {{- toYaml .Values.http_serve.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              port: http
              path: /metrics
          livenessProbe:
            tcpSocket:
              port: http
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      imagePullSecrets:
        - name: {{ include "chart.name" . }}-registry
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.serviceAccount.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-messenger-consume
  labels:
    {{- include "chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: consumer
spec:
  replicas: {{ .Values.messenger_consume.autoScaling.minReplicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}-messenger-consume
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: consumer
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}-messenger-consume
        app.kubernetes.io/instance: {{ .Release.Name }}
        date: "{{ now | unixEpoch }}"
        app.kubernetes.io/component: consumer
    spec:
      containers:
        - name: app
          image: "{{ .Values.messenger_consume.image.repository }}:{{ .Values.messenger_consume.image.tag }}"
          imagePullPolicy: {{ .Values.messenger_consume.image.pullPolicy }}
          command: [ 'bin/console', 'messenger:consume' ]
          envFrom:
            - configMapRef:
                name: {{ include "chart.name" . }}-configmap-messenger-consume
          resources:
            {{- toYaml .Values.messenger_consume.resources | nindent 12 }}
          livenessProbe:
            exec:
              command: [ bin/console, liveness ]
            timeoutSeconds: 60
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      imagePullSecrets:
        - name: {{ include "chart.name" . }}-registry
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.serviceAccount.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- if .Values.messenger_consume_sber.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-messenger-consume-sber
  labels:
    {{- include "chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: consumer
spec:
  replicas: {{ .Values.messenger_consume_sber.autoScaling.minReplicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}-messenger-consume-sber
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: consumer
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}-messenger-consume-sber
        app.kubernetes.io/instance: {{ .Release.Name }}
        date: "{{ now | unixEpoch }}"
        app.kubernetes.io/component: consumer
    spec:
      containers:
        - name: app
          image: "{{ .Values.messenger_consume.image.repository }}:{{ .Values.messenger_consume.image.tag }}"
          imagePullPolicy: {{ .Values.messenger_consume.image.pullPolicy }}
          command: [ 'bin/console', 'messenger:consume', '--scope', 'sber_email', '--scope', 'sber_phone' ]
          envFrom:
            - configMapRef:
                name: {{ include "chart.name" . }}-configmap-messenger-consume
          resources:
            {{- toYaml .Values.messenger_consume.resources | nindent 12 }}
          livenessProbe:
            exec:
              command: [ bin/console, liveness ]
            timeoutSeconds: 60
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      imagePullSecrets:
        - name: {{ include "chart.name" . }}-registry
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.serviceAccount.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
