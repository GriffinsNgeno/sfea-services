check_types:
  sber_simple_email:
    enabled: true
    source: { code: sber_simple }
    schema:
      allOf:
        - $ref: "#/definitions/schema/default"
        - type: object
          properties:
            email: { type: string, format: email }
          required:
            - email
    upstream:
      provider: sber_simple
      keydb: { enabled: true, scope: sber_simple_email, ttl: 24h, ttl_failed: 30s }
      rabbitmq: { enabled: true, scope: sber_simple_email }
      tcp:
        template:
          # language=HTTP
          query: |
            POST / HTTP/1.1
            Content-Type: application/json 
            
            {
                "email": {{ .email | Quote }}
            }
    mutator:
      template:
        # @formatter:off
        # language=GoTemplate
        records: |
          {{- range .data }}
          {{- if not (eq .client nil) }}
          - created_date: {{ Quote .client.createdDate }}
            masked_phone: {{ Quote .client.maskedPhone }}
            uuid: {{ Quote .client.uuid }}
          {{- end }}
          {{- end }}
        # @formatter:off
    produce:
      type: array
      items:
        type: object
        properties:
          created_date: { type: string }
          masked_phone: { type: string }
          uuid: { type: string }
