// Code generated by xgen. DO NOT EDIT.

package schema

// PersonReq ...
type PersonReq struct {
	First          string `xml:"first,omitempty" json:"first,omitempty"`
	Middle         string `xml:"middle,omitempty" json:"middle,omitempty"`
	Paternal       string `xml:"paternal,omitempty" json:"paternal,omitempty"`
	BirthDt        string `xml:"birthDt,omitempty" json:"birthdt,omitempty"`
	Passportseries string `xml:"passport_series,omitempty" json:"passportseries,omitempty"`
	Passportnumber string `xml:"passport_number,omitempty" json:"passportnumber,omitempty"`
	IssueDate      string `xml:"issueDate,omitempty" json:"issuedate,omitempty"`
	IssueAuthority string `xml:"issueAuthority,omitempty" json:"issueauthority,omitempty"`
	Inn            string `xml:"inn,omitempty" json:"inn,omitempty"`
	Snils          string `xml:"snils,omitempty" json:"snils,omitempty"`
	Drivernumber   string `xml:"driver_number,omitempty" json:"drivernumber,omitempty"`
	Driverdate     string `xml:"driver_date,omitempty" json:"driverdate,omitempty"`
	Regionid       int    `xml:"region_id,omitempty" json:"regionid,omitempty"`
}

// PhoneReq ...
type PhoneReq struct {
	Phone string `xml:"phone,omitempty" json:"phone,omitempty"`
}

// EmailReq ...
type EmailReq struct {
	Email string `xml:"email,omitempty" json:"email,omitempty"`
}

// IPReq ...
type IPReq struct {
	Ip string `xml:"ip,omitempty" json:"ip,omitempty"`
}

// SkypeReq ...
type SkypeReq struct {
	Skype string `xml:"skype,omitempty" json:"skype,omitempty"`
}

// TelegramReq ...
type TelegramReq struct {
	Telegram string `xml:"telegram,omitempty" json:"telegram,omitempty"`
}

// NickReq ...
type NickReq struct {
	Nick string `xml:"nick,omitempty" json:"nick,omitempty"`
}

// URLReq ...
type URLReq struct {
	Url string `xml:"url,omitempty" json:"url,omitempty"`
}

// CarReq ...
type CarReq struct {
	Vin     string `xml:"vin,omitempty" json:"vin,omitempty"`
	Bodynum string `xml:"bodynum,omitempty" json:"bodynum,omitempty"`
	Chassis string `xml:"chassis,omitempty" json:"chassis,omitempty"`
	Regnum  string `xml:"regnum,omitempty" json:"regnum,omitempty"`
	Ctc     string `xml:"ctc,omitempty" json:"ctc,omitempty"`
	Pts     string `xml:"pts,omitempty" json:"pts,omitempty"`
}

// OrgReq ...
type OrgReq struct {
	Inn      string `xml:"inn,omitempty" json:"inn,omitempty"`
	Ogrn     string `xml:"ogrn,omitempty" json:"ogrn,omitempty"`
	Name     string `xml:"name,omitempty" json:"name,omitempty"`
	Address  string `xml:"address,omitempty" json:"address,omitempty"`
	Regionid int    `xml:"region_id,omitempty" json:"regionid,omitempty"`
	Bik      int    `xml:"bik,omitempty" json:"bik,omitempty"`
}

// Request ...
type Request struct {
	UserIP          string         `xml:"UserIP,omitempty" json:"userip,omitempty"`
	UserID          string         `xml:"UserID,omitempty" json:"userid,omitempty"`
	RequestDateTime string         `xml:"requestDateTime,omitempty" json:"requestdatetime,omitempty"`
	RequestId       string         `xml:"requestId,omitempty" json:"requestid,omitempty"`
	RequestType     string         `xml:"requestType,omitempty" json:"requesttype,omitempty"`
	Sources         string         `xml:"sources,omitempty" json:"sources,omitempty"`
	Rules           string         `xml:"rules,omitempty" json:"rules,omitempty"`
	Recursive       int            `xml:"recursive,omitempty" json:"recursive,omitempty"`
	Async           int            `xml:"async,omitempty" json:"async,omitempty"`
	PersonReq       *PersonReq     `xml:"PersonReq,omitempty" json:"personreq,omitempty"`
	PhoneReq        []*PhoneReq    `xml:"PhoneReq,omitempty" json:"phonereq,omitempty"`
	EmailReq        []*EmailReq    `xml:"EmailReq,omitempty" json:"emailreq,omitempty"`
	IPReq           []*IPReq       `xml:"IPReq,omitempty" json:"ipreq,omitempty"`
	SkypeReq        []*SkypeReq    `xml:"SkypeReq,omitempty" json:"skypereq,omitempty"`
	TelegramReq     []*TelegramReq `xml:"TelegramReq,omitempty" json:"telegramreq,omitempty"`
	NickReq         []*NickReq     `xml:"NickReq,omitempty" json:"nickreq,omitempty"`
	URLReq          []*URLReq      `xml:"URLReq,omitempty" json:"urlreq,omitempty"`
	CarReq          *CarReq        `xml:"CarReq,omitempty" json:"carreq,omitempty"`
	OrgReq          *OrgReq        `xml:"OrgReq,omitempty" json:"orgreq,omitempty"`
}

// Field ...
type Field struct {
	FieldType        string `xml:"FieldType,omitempty" json:"fieldtype,omitempty"`
	FieldName        string `xml:"FieldName,omitempty" json:"fieldname,omitempty"`
	FieldTitle       string `xml:"FieldTitle,omitempty" json:"fieldtitle,omitempty"`
	FieldDescription string `xml:"FieldDescription,omitempty" json:"fielddescription,omitempty"`
	FieldValue       string `xml:"FieldValue,omitempty" json:"fieldvalue,omitempty"`
}

// Record ...
type Record struct {
	Field []*Field `xml:"Field,omitempty" json:"field,omitempty"`
}

// Contact ...
type Contact struct {
	ContactType  string `xml:"ContactType,omitempty" json:"contacttype,omitempty"`
	ContactTitle string `xml:"ContactTitle,omitempty" json:"contacttitle,omitempty"`
	ContactId    string `xml:"ContactId,omitempty" json:"contactid,omitempty"`
}

// Source ...
type Source struct {
	CodeAttr        string     `xml:"code,attr,omitempty" json:"codeattr,omitempty"`
	ChecktypeAttr   string     `xml:"checktype,attr,omitempty" json:"checktypeattr,omitempty"`
	StartAttr       string     `xml:"start,attr,omitempty" json:"startattr,omitempty"`
	ParamAttr       string     `xml:"param,attr,omitempty" json:"paramattr,omitempty"`
	PathAttr        string     `xml:"path,attr,omitempty" json:"pathattr,omitempty"`
	LevelAttr       string     `xml:"level,attr,omitempty" json:"levelattr,omitempty"`
	IndexAttr       string     `xml:"index,attr,omitempty" json:"indexattr,omitempty"`
	RequestidAttr   string     `xml:"request_id,attr,omitempty" json:"requestidattr,omitempty"`
	ProcesstimeAttr float64    `xml:"process_time,attr,omitempty" json:"processtimeattr,omitempty"`
	Name            string     `xml:"Name,omitempty" json:"name,omitempty"`
	Title           string     `xml:"Title,omitempty" json:"title,omitempty"`
	CheckTitle      string     `xml:"CheckTitle,omitempty" json:"checktitle,omitempty"`
	Request         string     `xml:"Request,omitempty" json:"request,omitempty"`
	Error           string     `xml:"Error,omitempty" json:"error,omitempty"`
	ResultsCount    int        `xml:"ResultsCount,omitempty" json:"resultscount,omitempty"`
	Record          []*Record  `xml:"Record,omitempty" json:"record,omitempty"`
	Contact         []*Contact `xml:"Contact,omitempty" json:"contact,omitempty"`
}

// Rule ...
type Rule struct {
	RuleCode   string `xml:"RuleCode,omitempty" json:"rulecode,omitempty"`
	RuleResult string `xml:"RuleResult,omitempty" json:"ruleresult,omitempty"`
}

// RulesLog ...
type RulesLog struct {
	Rule []*Rule `xml:"Rule,omitempty" json:"rule,omitempty"`
}

// Data ...
type Data struct {
	DataCode  string `xml:"DataCode,omitempty" json:"datacode,omitempty"`
	DataValue string `xml:"DataValue,omitempty" json:"datavalue,omitempty"`
}

// DataLog ...
type DataLog struct {
	Data []*Data `xml:"Data,omitempty" json:"data,omitempty"`
}

// ResultData ...
type ResultData struct {
	ResultCode  string `xml:"ResultCode,omitempty" json:"resultcode,omitempty"`
	ResultValue string `xml:"ResultValue,omitempty" json:"resultvalue,omitempty"`
}

// Decision ...
type Decision struct {
	RulesLog   *RulesLog     `xml:"RulesLog,omitempty" json:"ruleslog,omitempty"`
	DataLog    *DataLog      `xml:"DataLog,omitempty" json:"datalog,omitempty"`
	ResultData []*ResultData `xml:"ResultData,omitempty" json:"resultdata,omitempty"`
	Result     string        `xml:"Result,omitempty" json:"result,omitempty"`
}

// Response ...
type Response struct {
	IdAttr       int       `xml:"id,attr,omitempty" json:"idattr,omitempty"`
	StatusAttr   int       `xml:"status,attr,omitempty" json:"statusattr,omitempty"`
	DatetimeAttr string    `xml:"datetime,attr,omitempty" json:"datetimeattr,omitempty"`
	ResultAttr   string    `xml:"result,attr,omitempty" json:"resultattr,omitempty"`
	ViewAttr     string    `xml:"view,attr,omitempty" json:"viewattr,omitempty"`
	Request      *Request  `xml:"Request,omitempty" json:"request,omitempty"`
	Source       []*Source `xml:"Source,omitempty" json:"source,omitempty"`
	Decision     *Decision `xml:"Decision,omitempty" json:"decision,omitempty"`
}

// ContactType is Ссылка на просмотр ответа
type ContactType string
